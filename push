#!/usr/bin/env node

var log = console.log

var fs = require('fs')
var program = require('commander')
var exec = require('child_process').exec;
var sendEmail = require('./lib/SendEmail.js')
var home = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE

program
  .version('0.0.0')
  .option('--name <name>', 'A unique name for this Fido')
  .option('--minimum <repository>')
  .option('--maximum <destination>')
  .option('--emailTo <address>', 'A JSON object to feed into the templates. You must provide all variables.')
  .option('--emailUserName <user name>')
  .option('--emailPassword <password>')
  .option('--emailSubject <subject>')
  .option('--verbose')
  .parse(process.argv);

var sendEmailOptions = {
  userName: program.emailUserName,
  password: program.emailPassword,
  to: program.emailTo,
  subject: program.emailSubject,
  message: ''
}

var receivedValue = ''

process.stdin.on('error', function(e) {
  console.log("error: "+e)
})

process.stdin.on('data', function(chunk) {
  if (chunk)
    receivedValue += chunk
})
process.stdin.on('end', function() {
  go()
})

function go() {
  fs.readFile(home + '/.fido-' + program.name, {encoding: 'utf8'}, function(err, value) {
    if (value == '' || err) { 
      if (receivedValue > program.maximum) {
        trigger(program.name + ' has detected a value of ' + receivedValue + ' which is more than your maximum of ' + program.maximum)
      }
      else if (receivedValue < program.minimum) {
        trigger(program.name + ' has detected a value of ' + receivedValue + ' which is less than your minimum of ' + program.minimum)
      }
    }
    else {
      if (receivedValue < program.maximum && receivedValue > program.minimum) {
        fs.writeFile(home + '/.fido-' + program.name, '')
      }
    }
  })
}

function trigger(message) {
  if (program.verbose)  log('Triggered...')

  sendEmailOptions.message = message
  fs.open(home + '/.fido-' + program.name, 'w', function(err, fd) {
    var buffer = new Buffer(receivedValue)
    fs.write(fd, buffer, 0, buffer.length, null, function(err) {
      sendEmail(sendEmailOptions, function(err) {
        if (err) log(err)
      })
    })

  })
}
