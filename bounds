#!/usr/bin/env bash 

# Usage output.
function usage()
{
    echo ""
    echo "Bounds."
    echo ""
    echo ""
    echo "Example usage:"
    echo ""
    echo "pull-temperature | bounds --minimum=32 --maximum=90 --name=sensor1"
    echo ""
    echo ""
    echo "Note: This command ignores decimal places."
}

if [ "$1" == "" ]; then
  usage
  exit 1
fi

# Parse options.
while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        --process-name)
            PROCESS_NAME=$VALUE
            ;;
        --minimum)
            MINIMUM=$VALUE
            ;;
        --maximum)
            MAXIMUM=$VALUE
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
    esac
    shift
done

# @TODO Check for min and max.

# States.
LAST_VALUE_WAS_IN_BOUNDS="true"
CURRENT_VALUE_IS_IN_BOUNDS="true"

# If we have a process name, set up a state store on the file system.
if [ $PROCESS_NAME ]; then
  STATE_STORE="/tmp/.bounds-process-$PROCESS_NAME"
  if [ -f $STATE_STORE ]; then 
    LAST_VALUE_WAS_IN_BOUNDS=`cat $STATE_STORE`
    # echo "LAST_VALUE_WAS_IN_BOUNDS is now $LAST_VALUE_WAS_IN_BOUNDS which is cool." 
  else
    touch $STATE_STORE
    echo "$CURRENT_VALUE_IS_IN_BOUNDS" > $STATE_STORE
  fi
fi 

# Read from pipe's stdin and echo if boundaries are crossed.
while read VALUE 
do
  VALUE=$(echo $VALUE | awk -F "." '{ print $1 }')
  #echo "value: $VALUE"
  #echo "maximum: $MAXIMUM"
  #echo "minumum: $MINIMUM"
  #echo "LAST_VALUE_WAS_IN_BOUNDS: $LAST_VALUE_WAS_IN_BOUNDS"
  if (( MINIMUM < VALUE )) && (( VALUE < MAXIMUM )); then 
    CURRENT_VALUE_IS_IN_BOUNDS="true"
  else
    CURRENT_VALUE_IS_IN_BOUNDS="false"
  fi
  
  if [ $CURRENT_VALUE_IS_IN_BOUNDS == "true" ] && [ $LAST_VALUE_WAS_IN_BOUNDS == "false" ] ; then
    MESSAGE="in bounds at $VALUE"
  fi
  if [ $CURRENT_VALUE_IS_IN_BOUNDS == "false" ] && [ $LAST_VALUE_WAS_IN_BOUNDS == "true" ] ; then
    MESSAGE="out of bounds at $VALUE"
  fi
  if [ "$MESSAGE" != "" ]; then
    if [ "$PROCESS_NAME" != "" ]; then
      MESSAGE="$PROCESS_NAME is $MESSAGE"
    fi
    echo $MESSAGE
  fi
  # Save state.
  if [ $PROCESS_NAME ]; then
    echo "$CURRENT_VALUE_IS_IN_BOUNDS" > $STATE_STORE
  fi
done < /dev/stdin
